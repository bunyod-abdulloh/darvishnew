import os

import aiogram
from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext

from bot.keyboards.inline.testskb import test_ibuttons, start_test
from bot.keyboards.reply.tests_dkb import tests_main_dkb
from bot.states.userstates import UserAnketa
from loader import db

test = Router()


@test.message(F.text == "üßë‚Äçüíª Testlar | So'rovnomalar")
async def tests_main_hr(message: types.Message, state: FSMContext):
    telegram_id = message.from_user.id
    user = await db.select_user(
        telegram_id=telegram_id
    )
    if user['fio']:
        await message.answer(
            text="üßë‚Äçüíª Testlar | So'rovnomalar", reply_markup=tests_main_dkb
        )
    else:
        await message.answer(
            text="–§–∞–º–∏–ª–∏—è, –∏—Å–º –≤–∞ –æ—Ç–∞–Ω–≥–∏–∑–Ω–∏ –∏—Å–º–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥:\n\n"
                 "<b>(–ù–∞–º—É–Ω–∞: –¢–µ—à–∞–±–∞–µ–≤–∞ –ì–∞–≤“≥–∞—Ä –î–∞—Ä–≤–∏—à–æ–≤–Ω–∞)</b>"
        )
        await state.set_state(
            state=UserAnketa.addfullname
        )


@test.message(UserAnketa.addfullname)
async def addfullname(message: types.Message, state: FSMContext):
    await db.updateuser_fullname(
        telegram_id=message.from_user.id, fio=message.text
    )
    await message.answer(
        text="–¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥:\n\n"
             "<b>(–ù–∞–º—É–Ω–∞: +998991234567)</b>"
    )
    await state.set_state(UserAnketa.addphone)


@test.message(UserAnketa.addphone)
async def addphone(message: types.Message, state: FSMContext):
    await db.updateuser_phone(
        telegram_id=message.from_user.id, phone=message.text
    )
    await message.answer(
        text="üßë‚Äçüíª Testlar | So'rovnomalar", reply_markup=tests_main_dkb
    )
    await state.clear()


@test.message(F.text == "Yaxin Mendelevich so'rovnomasi")
async def test_command(message: types.Message):
    telegram_id = message.from_user.id
    await db.delete_user_yaxintemporary(
        telegram_id=telegram_id
    )
    await message.answer(
        text="–£—à–±—É –∫–ª–∏–Ω–∏–∫ —Å—û—Ä–æ–≤–Ω–æ–º–∞ –Ω–µ–≤—Ä–æ—Ç–∏–∫ “≥–æ–ª–∞—Ç–ª–∞—Ä–Ω–∏–Ω–≥ –∞—Å–æ—Å–∏–π —Å–∏–Ω–¥—Ä–æ–º–ª–∞—Ä–∏–Ω–∏ –∞–Ω–∏“õ–ª–∞—à–≥–∞ —ë—Ä–¥–∞–º –±–µ—Ä–∞–¥–∏. "
             "–ö–ª–∏–Ω–∏–∫ —Å—û—Ä–æ–≤–Ω–æ–º–∞ –Ω–∞—Ç–∏–∂–∞–ª–∞—Ä–∏ “õ—É–π–∏–¥–∞–≥–∏ 6 —Ç–∞ –º–µ–∑–æ–Ω –±—û–π–∏—á–∞ –∞–Ω–∏“õ–ª–∞–Ω–∏–± —Ç–∞“≥–ª–∏–ª “õ–∏–ª–∏–Ω–∞–¥–∏:\n\n1) –•–∞–≤–æ—Ç–∏—Ä –º–µ–∑–æ–Ω–∏ "
             "\n2) –ù–µ–≤—Ä–æ—Ç–∏–∫ –¥–µ–ø—Ä–µ—Å—Å–∏—è –º–µ–∑–æ–Ω–∏ \n3) –ê—Å—Ç–µ–Ω–∏—è –º–µ–∑–æ–Ω–∏\n4) –ò—Å—Ç–µ—Ä–∏–∫ —Ç–æ–∏—Ñ–∞–¥–∞–≥–∏ –∂–∞–≤–æ–± –º–µ–∑–æ–Ω–∏ "
             "\n5) –û–±—Å–µ—Å—Å–∏–≤ - —Ñ–æ–±–∏–∫ –±—É–∑–∏–ª–∏—à–ª–∞—Ä –º–µ–∑–æ–Ω–∏\n6) –í–µ–≥–µ—Ç–∞—Ç–∏–≤ –±—É–∑–∏–ª–∏—à–ª–∞—Ä –º–µ–∑–æ–Ω–∏"
             "\n\n<b>–ô—û—Ä–∏“õ–Ω–æ–º–∞:</b>\n\n–•–æ–∑–∏—Ä–≥–∏ “≥–æ–ª–∞—Ç–∏–Ω–≥–∏–∑–Ω–∏ —Ç–∞—Å–≤–∏—Ä–ª–æ–≤—á–∏ 68 —Ç–∞ —Å–∞–≤–æ–ª–ª–∞—Ä —Ç—û–ø–ª–∞–º–∏–≥–∞ “õ—É–π–∏–¥–∞–≥–∏ 5 —Ç–∞ "
             "–∂–∞–≤–æ–±–¥–∞–Ω –±–∏—Ä–∏–Ω–∏ —Ç–∞–Ω–ª–∞–± –∂–∞–≤–æ–± –±–µ—Ä–∏—à–∏–Ω–≥–∏–∑ –ª–æ–∑–∏–º:  \n ‚Ä¢ “≤–µ—á “õ–∞—á–æ–Ω \n ‚Ä¢ –ö–∞–º–¥–∞–Ω - –∫–∞–º \n ‚Ä¢ –ë–∞—ä–∑–∏–¥–∞ "
             "\n ‚Ä¢ –¢–µ–∑ - —Ç–µ–∑ \n ‚Ä¢ –î–æ–∏–º "
             "\n\n–°—û—Ä–æ–≤–Ω–æ–º–∞ —è–∫—É–Ω–ª–∞–Ω–≥–∞—á “≥–∞—Ä –±–∏—Ä –º–µ–∑–æ–Ω –±—û–π–∏—á–∞ –∫—û—Ä—Å–∞—Ç–∫–∏—á–ª–∞—Ä–∏–Ω–≥–∏–∑ —Ç–∞“õ–¥–∏–º —ç—Ç–∏–ª–∞–¥–∏.",
        reply_markup=start_test(
            callback="yaxintest"
        )
    )


@test.callback_query(F.data == "yaxintest")
async def start_test_yaxin(call: types.CallbackQuery):
    all_questions = await db.select_all_yaxin()
    await call.message.edit_text(
        text=f"{all_questions[0]['id']} / {len(all_questions)}\n\n{all_questions[0]['question']}",
        reply_markup=test_ibuttons(
            testdb=all_questions[0]
        ))


@test.callback_query(F.data.startswith("point_"))
async def test_callback(call: types.CallbackQuery):
    column_name = call.data.split(":")[0]
    scale_type = call.data.split(":")[1]
    question_number = int(call.data.split(":")[2])
    telegram_id = call.from_user.id
    await call.answer(
        cache_time=0
    )

    all_questions = await db.select_all_yaxin()

    if "-" in scale_type:
        scale_one = scale_type.split("-")[0]
        scale_two = scale_type.split("-")[1]
        point_one = await db.select_question_scale(
            scale_type=scale_one, question_number=question_number
        )
        point_two = await db.select_question_scale(
            scale_type=scale_two, question_number=question_number
        )
        await db.add_yaxin_temporary(
            telegram_id=telegram_id, scale_type=scale_one, question_number=question_number,
            test_type="nevroz_yaxin", answer=point_one[column_name]
        )
        await db.add_yaxin_temporary(
            telegram_id=telegram_id, scale_type=scale_two, question_number=question_number,
            test_type="nevroz_yaxin", answer=point_two[column_name]
        )
    else:
        point = await db.select_question_scale(
            scale_type=scale_type, question_number=question_number
        )
        await db.add_yaxin_temporary(
            telegram_id=telegram_id, scale_type=scale_type, question_number=question_number,
            test_type="nevroz_yaxin", answer=point[column_name]
        )

    if all_questions[-1]['id'] == question_number:
        xavotir = await db.select_datas_temporary(
            telegram_id=telegram_id, scale_type="xavotir"
        )
        nevrotik_depressiya = await db.select_datas_temporary(
            telegram_id=telegram_id, scale_type="nevrotikdep"
        )
        asteniya = await db.select_datas_temporary(
            telegram_id=telegram_id, scale_type="astenik"
        )
        isterik = await db.select_datas_temporary(
            telegram_id=telegram_id, scale_type="isterik"
        )
        obsessivfobik = await db.select_datas_temporary(
            telegram_id=telegram_id, scale_type="obsessivfobik"
        )
        vegetativ = await db.select_datas_temporary(
            telegram_id=telegram_id, scale_type="vegetativ"
        )

        result = [xavotir, nevrotik_depressiya, asteniya, isterik, obsessivfobik, vegetativ]

        text = str()

        if any(number < -1.28 for number in result):
            text += "–ù–µ–≤—Ä–æ—Ç–∏–∫ “≥–æ–ª–∞—Ç –º–∞–≤–∂—É–¥!"
        else:
            text += "–ù–µ–≤—Ä–æ—Ç–∏–∫ “≥–æ–ª–∞—Ç –º–∞–≤–∂—É–¥ —ç–º–∞—Å!"
        user = await db.select_user(
            telegram_id=telegram_id
        )
        photo = f"–¢–µ—Å—Ç —Ç—É—Ä–∏: –Ø—Ö–∏–Ω, –ú–µ–Ω–¥–µ–ª–µ–≤–∏—á | –ù–µ–≤—Ä–æ—Ç–∏–∫ “≥–æ–ª–∞—Ç–Ω–∏ –∞–Ω–∏“õ–ª–∞—à\n\n" \
                f"–§.–ò.–û: {user['fio']}\n\n" \
                f"–¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º: {user['phone']}\n\n" \
                f"X–∞–≤–æ—Ç–∏—Ä –º–µ–∑–æ–Ω–∏: {xavotir}\n\n" \
                f"–ù–µ–≤—Ä–æ—Ç–∏–∫-–¥–µ–ø—Ä–µ—Å—Å–∏—è –º–µ–∑–æ–Ω–∏: {nevrotik_depressiya}\n\n" \
                f"–ê—Å—Ç–µ–Ω–∏—è –º–µ–∑–æ–Ω–∏: {asteniya}\n\n" \
                f"–ò—Å—Ç–µ—Ä–∏–∫ —Ç–æ–∏—Ñ–∞–¥–∞–≥–∏ –∂–∞–≤–æ–± –º–µ–∑–æ–Ω–∏: {isterik}\n\n" \
                f"–û–±—Å–µ—Å—Å–∏–≤-—Ñ–æ–±–∏–∫ –±—É–∑–∏–ª–∏—à–ª–∞—Ä –º–µ–∑–æ–Ω–∏: {obsessivfobik}\n\n" \
                f"–í–µ–≥–µ—Ç–∞—Ç–∏–≤ –±—É–∑–∏–ª–∏—à–ª–∞—Ä –º–µ–∑–æ–Ω–∏: {vegetativ}\n\n{text}"

        import matplotlib.pyplot as plt

        plt.figure(figsize=(10, 5))

        # Matnni joylashtirish
        plt.text(0, 1, photo, fontsize=12, ha='left', va='top', transform=plt.gca().transAxes)

        # O'qlarni o'chirib qo'yamiz
        plt.axis('off')
        photo_link = f"{telegram_id}.png"
        # Rasmni saqlaymiz
        plt.savefig(photo_link, bbox_inches='tight', dpi=300)

        # Rasmni ko'rsatish
        plt.show()
        await call.message.delete()
        sent_message = await call.message.answer_photo(
            photo=types.input_file.FSInputFile(photo_link),
            caption=f"<b>–°—û—Ä–æ–≤–Ω–æ–º–∞ —è–∫—É–Ω–ª–∞–Ω–¥–∏!\n\n</b>"
                    f"–ù–∞—Ç–∏–∂–∞–Ω–≥–∏–∑ –∫—û—Ä—Å–∞—Ç–∫–∏—á–ª–∞—Ä–∏–Ω–∏ —é“õ–æ—Ä–∏–¥–∞–≥–∏ —Ä–∞—Å–º–¥–∞–Ω —é–∫–ª–∞–± –æ–ª–∏—à–∏–Ω–≥–∏–∑ –º—É–º–∫–∏–Ω!\n\n"
                    f"–ú–µ–∑–æ–Ω–ª–∞—Ä–¥–∞–≥–∏ –∫—û—Ä—Å–∞—Ç–∫–∏—á–ª–∞—Ä + 1.28 –¥–∞–Ω —é“õ–æ—Ä–∏ –±—û–ª—Å–∞ —Å–æ“ì–ª–æ–º–ª–∏–∫ –¥–∞—Ä–∞–∂–∞—Å–∏–Ω–∏, - 1.28 –¥–∞–Ω –ø–∞—Å—Ç –±—û–ª—Å–∞ "
                    f"–Ω–µ–≤—Ä–æ—Ç–∏–∫ “≥–æ–ª–∞—Ç –±–æ—Ä–ª–∏–≥–∏–¥–∞–Ω –¥–∞–ª–æ–ª–∞—Ç –±–µ—Ä–∞–¥–∏. –ò–∫–∫–∏—Å–∏–Ω–∏ —û—Ä—Ç–∞—Å–∏–¥–∞–≥–∏ –∫—û—Ä—Å–∞—Ç–∫–∏—á —ç—Å–∞ –Ω–æ—Ç—É—Ä“ì—É–Ω –ø—Å–∏—Ö–∏–∫ "
                    f"–º–æ—Å–ª–∞—à—É–≤—á–∞–Ω–ª–∏–∫–Ω–∏ –±–∏–ª–¥–∏—Ä–∞–¥–∏.\n\n"
                    f"<b><i>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —É—á—É–Ω:\n\n@Hidaya_Med_Clinic_administrator\n\n"
                    f"+998339513444</i></b>"
        )
        file_id = sent_message.photo[-1].file_id

        await db.delete_user_yaxintemporary(
            telegram_id=telegram_id
        )
        os.remove(photo_link)
    else:
        try:
            await call.message.edit_text(
                text=f"{all_questions[question_number]['id']} / {len(all_questions)}"
                     f"\n\n{all_questions[question_number]['question']}",
                reply_markup=test_ibuttons(
                    testdb=all_questions[question_number]
                )
            )
        except aiogram.exceptions.TelegramBadRequest:
            pass


@test.callback_query(F.data.startswith("yaxinback:"))
async def test_back_callback(call: types.CallbackQuery):
    question_number = int(call.data.split(":")[1])
    telegram_id = call.from_user.id

    if question_number == 0:
        await call.message.delete()
        await call.message.answer(
            text="üßë‚Äçüíª Testlar | So'rovnomalar", reply_markup=tests_main_dkb
        )
    else:
        await db.back_user_yaxintemporary(
            telegram_id=telegram_id, question_number=question_number
        )

        all_questions = await db.select_all_yaxin()

        await call.message.edit_text(
            text=f"{all_questions[question_number - 1]['id']} / {len(all_questions)}"
                 f"\n\n{all_questions[question_number - 1]['question']}",
            reply_markup=test_ibuttons(
                testdb=all_questions[question_number - 1]
            )
        )
